<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newhope.moneyfeed.feedback.dal.CsUserFeedbacksDao">
  <resultMap id="ExBaseResultMap" type="com.newhope.moneyfeed.feedback.api.exbean.CsUserFeedbacksExModel" extends="BaseResultMap">
    <association property="csUserFeedbackSolvesModel" column="id"                       
            select="findCsUserFeedbackSolvesByFeedbackId"></association>
  </resultMap>

  <select id="queryFeedbackList" parameterType="com.newhope.moneyfeed.feedback.api.dto.request.FeedbackPageDtoReq" resultMap="ExBaseResultMap">
    select 
    	feedbacks.*
    from cs_user_feedbacks feedbacks
    LEFT JOIN cs_user_feedback_solves solves ON feedbacks.id = solves.feedback_id AND solves.data_status = 'normal'
    <where>
    	1=1
    	and feedbacks.data_status = 'normal'
      <if test="feedbackTimeStart != null">
         and feedbacks.feedback_time &gt;= #{feedbackTimeStart,jdbcType=DATE}
	  </if>
	  <if test="feedbackTimeEnd != null">
	     and feedbacks.feedback_time &lt;= #{feedbackTimeEnd,jdbcType=DATE}
	  </if>
	  <if test="userId != null">
	     and feedbacks.user_id = #{userId,jdbcType=BIGINT}
	  </if>
      <if test="solveTypeList!=null and solveTypeList.size>0">
      	and feedbacks.id in (
      		SELECT feedback_id FROM cs_user_feedback_solves WHERE data_status = 'normal'
      		AND solves.solve_type in (
	          <foreach collection="solveTypeList" item="solveTypeItem" index="index" separator=",">
	              #{solveTypeItem,jdbcType=VARCHAR}
	          </foreach>
	          ) 
      	)
      </if>
      <if test="messageLabelTypeList!=null and messageLabelTypeList.size>0">
     	and feedbacks.message_label_type in (
          <foreach collection="messageLabelTypeList" item="messageLabelTypeItem" index="index" separator=",">
              #{messageLabelTypeItem,jdbcType=VARCHAR}
          </foreach>
          ) 
      </if>
      <if test="intentionShopId != null">
	     and feedbacks.intention_shop_id = #{intentionShopId,jdbcType=BIGINT}
	  </if>
	  <if test="shopId != null">
	     and feedbacks.shop_id = #{shopId,jdbcType=BIGINT}
	  </if>
	  <if test="channel != null and channel != ''">
         and feedbacks.channel = #{channel,jdbcType=VARCHAR}
      </if>
      <if test="feedbackStatusList !=null and feedbackStatusList.size>0">
     	and feedbacks.feedback_status in (
          <foreach collection="feedbackStatusList" item="feedbackStatusItem" index="index" separator=",">
              #{feedbackStatusItem,jdbcType=VARCHAR}
          </foreach>
          ) 
      </if>
    </where>
    order by feedbacks.gmt_created desc
  </select>
  
  
  <select id="queryFeedbackCount" parameterType="com.newhope.moneyfeed.feedback.api.dto.request.FeedbackPageDtoReq" resultType="java.lang.Integer">
    select 
    	COUNT(1)
    from cs_user_feedbacks feedbacks
    LEFT JOIN cs_user_feedback_solves solves ON feedbacks.id = solves.feedback_id AND solves.data_status = 'normal'
    <where>
    	1=1
    	and feedbacks.data_status = 'normal'
      <if test="feedbackTimeStart != null">
         and feedbacks.feedback_time &gt;= #{feedbackTimeStart,jdbcType=DATE}
	  </if>
	  <if test="feedbackTimeEnd != null">
	     and feedbacks.feedback_time &lt;= #{feedbackTimeEnd,jdbcType=DATE}
	  </if>
	  <if test="userId != null">
	     and feedbacks.user_id = #{userId,jdbcType=BIGINT}
	  </if>
      <if test="solveTypeList!=null and solveTypeList.size>0">
      	AND feedbacks.id in (
      		SELECT feedback_id FROM cs_user_feedback_solves WHERE data_status = 'normal'
      		AND solves.solve_type in (
	          <foreach collection="solveTypeList" item="solveTypeItem" index="index" separator=",">
	              #{solveTypeItem,jdbcType=VARCHAR}
	          </foreach>
	          ) 
      	)
      </if>
      <if test="intentionShopId != null">
	     and feedbacks.intention_shop_id = #{intentionShopId,jdbcType=BIGINT}
	  </if>
	  <if test="shopId != null">
	     and feedbacks.shop_id = #{shopId,jdbcType=BIGINT}
	  </if>
	  <if test="channel != null and channel != ''">
         and feedbacks.channel = #{channel,jdbcType=VARCHAR}
      </if>
      <if test="feedbackStatusList !=null and feedbackStatusList.size>0">
     	and feedbacks.feedback_status in (
          <foreach collection="feedbackStatusList" item="feedbackStatusItem" index="index" separator=",">
              #{feedbackStatusItem,jdbcType=VARCHAR}
          </foreach>
          ) 
      </if>
    </where>
    
  </select>
  
  <select id="queryFeedbackById" parameterType="java.lang.Long" resultMap="ExBaseResultMap">
    select 
    	feedbacks.*
    from cs_user_feedbacks feedbacks
    LEFT JOIN cs_user_feedback_solves solves ON feedbacks.id = solves.feedback_id AND solves.data_status = 'normal'
    WHERE feedbacks.id = #{id}
  </select>
  
  <resultMap id="SolvesBaseResultMap" type="com.newhope.moneyfeed.feedback.api.bean.CsUserFeedbackSolvesModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="modifier" jdbcType="BIGINT" property="modifier" />
    <result column="version" jdbcType="BIGINT" property="version" />
    <result column="feedback_id" jdbcType="BIGINT" property="feedbackId" />
    <result column="solve_user_id" jdbcType="BIGINT" property="solveUserId" />
    <result column="solve_time" jdbcType="DATE" property="solveTime" />
    <result column="solve_desc" jdbcType="VARCHAR" property="solveDesc" />
    <result column="solve_type" jdbcType="VARCHAR" property="solveType" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="data_status" jdbcType="VARCHAR" property="dataStatus" />
  </resultMap>
  
  <select id="findCsUserFeedbackSolvesByFeedbackId" parameterType="java.lang.Long"
		resultMap="SolvesBaseResultMap">
		select * from cs_user_feedback_solves where feedback_id = #{id} and data_status = 'normal'
	</select>
</mapper>